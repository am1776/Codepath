/**
 * Definition for singly-linked list.
 * class ListNode {
 *     public int val;
 *     public ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
public class Solution {
	public ListNode detectCycle(ListNode a) {
	    if(a == null){
	        return a;
	    }
	    ListNode slow = a;
	    ListNode fast = a;
	    
	    while((fast.next != null)&&(fast.next.next != null)){
	        slow = slow.next;
	        fast = fast.next.next;
	        if(slow == fast){
	            while(a != slow){
	                a = a.next;
	                slow = slow.next;
	            }
	            return a;
	        }
	    }
	    
        return null;
	}
}